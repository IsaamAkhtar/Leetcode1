Given an integer n, return the count of all numbers with unique digits, x, where 0 <= x < 10n.

 

Example 1:
Input: n = 2
Output: 91
Explanation: The answer should be the total numbers in the range of 0 â‰¤ x < 100, excluding 11,22,33,44,55,66,77,88,99

Example 2:
Input: n = 0
Output: 1

class Solution:
    def countNumbersWithUniqueDigits(self, n: int) -> int:
        if n == 0:
            return 1 
        #Initialize count to 10 (digits 0 to 9).
        count = 10

        #Calculate unique digit counts for numbers of different lengths.
        #Digits 1 to 9 (excluding 0) for the first position.
        uniqueDigits = 9
        #Numbers available for the subsequent positions.
        availableNumbers = 9
        #Loop through the numbers.
        for i in range(2, n + 1):
            #Multiple the unique digits with the number of values.
            uniqueDigits *= availableNumbers
            #Increment the count of unique digited numbers.
            count += uniqueDigits
            #Decrement the availible numbers.
            availableNumbers -= 1
        return count
 
