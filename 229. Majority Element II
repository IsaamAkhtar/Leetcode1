Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

 

Example 1:
Input: nums = [3,2,3]
Output: [3]

Example 2:
Input: nums = [1]
Output: [1]

Example 3:
Input: nums = [1,2]
Output: [1,2]

class Solution:
    def majorityElement(self, nums: List[int]) -> List[int]:
        answer = []
        n = len(nums)
        #Loop through nums, if we find a element appearing more then (n/3) times, 
        #we add it to a list of answer, then turn the list into a set to 
        #eliminate duplicates, then return the answer as a list.
        for i in nums:
            if nums.count(i) > n / 3:
                answer.append(i)
        mySet = set(answer)
        finAnswer = list(mySet)
        return finAnswer
 
