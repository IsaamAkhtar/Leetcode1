You have some apples and a basket that can carry up to 5000 units of weight.

Given an integer array weight where weight[i] is the weight of the ith apple, return the maximum number of apples you can put in the basket.

 

Example 1:
Input: weight = [100,200,150,1000]
Output: 4
Explanation: All 4 apples can be carried by the basket since their sum of weights is 1450.

Example 2:
Input: weight = [900,950,800,1000,700,800]
Output: 5
Explanation: The sum of weights of the 6 apples exceeds 5000 so we choose any 5 of them.

class Solution(object):
    def maxNumberOfApples(self, weight):
        """
        :type weight: List[int]
        :rtype: int
        """
        #Sort the array if weights.
        weight.sort()
        #Initialise values for the current sum and the no. of apples.
        currSum = 0
        noOfApples = 0
        #Loop throught the array.
        for i in weight:
            #If the weight is not already 5000 and will not increase to over 5000,
            #Increment the current sum and no. of apples.
            if currSum < 5000 and currSum + i <= 5000:
                currSum += i
                noOfApples += 1
        return noOfApples
