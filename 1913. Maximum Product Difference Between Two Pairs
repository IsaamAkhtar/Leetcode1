The product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d).

For example, the product difference between (5, 6) and (2, 7) is (5 * 6) - (2 * 7) = 16.
Given an integer array nums, choose four distinct indices w, x, y, and z such that the product difference between pairs (nums[w], nums[x]) and (nums[y], nums[z]) is maximized.

Return the maximum such product difference.

 

Example 1:
Input: nums = [5,6,2,7,4]
Output: 34
Explanation: We can choose indices 1 and 3 for the first pair (6, 7) and indices 2 and 4 for the second pair (2, 4).
The product difference is (6 * 7) - (2 * 4) = 34.

Example 2:
Input: nums = [4,2,5,9,7,4,8]
Output: 64
Explanation: We can choose indices 3 and 6 for the first pair (9, 8) and indices 1 and 5 for the second pair (2, 4).
The product difference is (9 * 8) - (2 * 4) = 64

class Solution(object):
    def maxProductDifference(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        #Assign arbitary large and small values to the two largest and smallest values.
        smallest1 = smallest2 = float('inf')
        largest1 = largest2 = float('-inf')
        #Find the two largest and smallest number.
        for num in nums:
            if num < smallest1:
                smallest2 = smallest1
                smallest1 = num
            elif num < smallest2:
                smallest2 = num
            #Find the two largest and smallest number.
            if num > largest1:
                largest2 = largest1
                largest1 = num
            elif num > largest2:
                largest2 = num
        #Return the difference of their product.
        return ((largest1 * largest2) - (smallest1 * smallest2))
