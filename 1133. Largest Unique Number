Given an integer array nums, return the largest integer that only occurs once. If no integer occurs once, return -1.

 

Example 1:
Input: nums = [5,7,3,9,4,9,8,3,1]
Output: 8
Explanation: The maximum integer in the array is 9 but it is repeated. The number 8 occurs only once, so it is the answer.

Example 2:
Input: nums = [9,9,8,8]
Output: -1
Explanation: There is no number that occurs only once.

class Solution(object):
    def largestUniqueNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        #Initialise a list to store the unique numbers.
        uniqueNumbers = []
        #Loop through the given list, add each unique number to the list of unique numbers.
        for num in nums:
            if nums.count(num) == 1:
                uniqueNumbers.append(num)
        #If there are any unique numbers, return the largest, otherwise return -1. 
        if len(uniqueNumbers) >= 1:
            return max(uniqueNumbers)
        return -1
