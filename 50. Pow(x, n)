Implement pow(x, n), which calculates x raised to the power n (i.e., xn).

 

Example 1:
Input: x = 2.00000, n = 10
Output: 1024.00000

Example 2:
Input: x = 2.10000, n = 3
Output: 9.26100

Example 3:
Input: x = 2.00000, n = -2
Output: 0.25000
Explanation: 2-2 = 1/22 = 1/4 = 0.25

class Solution(object):
    def myPow(self, x, n):
        """
        :type x: float
        :type n: int
        :rtype: float
        """
        #Check if the exponent is zero, return 1.
        if n == 0:
            return 1
        #If we have a negative exponent, use the reciprocal to return the answer.
        if n < 0:
            x = 1 / x
            n = -n
        result = 1
        #While the exponent is greater then zero, we increase the base as needed.
        while n > 0:
            if n % 2 == 1:
                result *= x
            x *= x
            n //= 2
        return result
