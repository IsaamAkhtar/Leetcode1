Given an array of strings words, return the words that can be typed using letters of the alphabet on only one row of American keyboard like the image below.

In the American keyboard:

the first row consists of the characters "qwertyuiop",
the second row consists of the characters "asdfghjkl", and
the third row consists of the characters "zxcvbnm".

 

Example 1:
Input: words = ["Hello","Alaska","Dad","Peace"]
Output: ["Alaska","Dad"]

Example 2:
Input: words = ["omk"]
Output: []

Example 3:
Input: words = ["adsdf","sfd"]
Output: ["adsdf","sfd"]

class Solution(object):
    def findWords(self, words):
        """
        :type words: List[str]
        :rtype: List[str]
        """
        #3 sets for each of the rows.
        row1 = {'q','w','e','r','t','y','u','i','o','p'}
        row2 = {'a','s','d','f','g','h','j','k','l'}
        row3 = {'z','x','c','v','b','n','m'}
        #Set for the answer.
        answer = []
        #Loop through the words.
        for word in words:
            #Make a set of the words.
            wordSet = set(word.lower())
            #Check if the word can be made with any of the rows.
            if (wordSet&row1 == wordSet) or (wordSet&row2 ==wordSet) or (wordSet&row3 ==wordSet):
                answer.append(word)
        return answer
