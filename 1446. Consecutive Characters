The power of the string is the maximum length of a non-empty substring that contains only one unique character.

Given a string s, return the power of s.

 

Example 1:

Input: s = "leetcode"
Output: 2
Explanation: The substring "ee" is of length 2 with the character 'e' only.
Example 2:

Input: s = "abbcccddddeeeeedcba"
Output: 5
Explanation: The substring "eeeee" is of length 5 with the character 'e' only.

class Solution(object):
    def maxPower(self, s):
        """
        :type s: str
        :rtype: int
        """
        #Initialize two variables, one to hold the maximum power and one to hold the current.
        maxPower = 1
        currPower = 1
        #Iterate through the string from the second characters, if the character in the second
        #index is the same as the character in the next index, we increment the current power.
        #Otherwise, we take the maximum of the max power and the current power, and reset the
        #current power.
        for i in range(1, len(s)):
            if s[i] == s[i-1]:
                currPower += 1
            else:
                maxPower = max(maxPower, currPower)
                currPower = 1
        #We finally take the maximum of the max power and the current power, and reset the
        #current power again, and return the maximum.
        maxPower = max(maxPower, currPower)
        return maxPower
