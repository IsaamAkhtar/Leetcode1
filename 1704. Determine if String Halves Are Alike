You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.

 
Example 1:
Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.

Example 2:
Input: s = "textbook"
Output: false
Explanation: a = "text" and b = "book". a has 1 vowel whereas b has 2. Therefore, they are not alike.
Notice that the vowel o is counted twice.

class Solution(object):
    def halvesAreAlike(self, s):
        """
        :type s: str
        :rtype: bool
        """
        #Set of vowels.
        vowels = set('aeiouAEIOU')
        #Midpoint index of the string.
        mid = len(s) // 2  
        #Initialize counters for vowels in each half.
        countA = countB = 0 
        #Iterate through the first half of the string.
        for i in range(mid):
            #Check if the character is a vowel.
            if s[i] in vowels:
                #Increment the count in the first half.
                countA += 1
            #Check the second half for a vowel.
            if s[mid + i] in vowels:
                #Increment the count of the second.
                countB += 1 
        return countA == countB
