Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.

 

Example 1:
Input: temperatures = [73,74,75,71,69,72,76,73]
Output: [1,1,4,2,1,1,0,0]

Example 2:
Input: temperatures = [30,40,50,60]
Output: [1,1,1,0]

Example 3:
Input: temperatures = [30,60,90]
Output: [1,1,0]

class Solution(object):
    def dailyTemperatures(self, temperatures):
        """
        :type temperatures: List[int]
        :rtype: List[int]
        """
        #Initialise a value to store the length of the given array, and make an array 
        #to store the answer, and a stack.
        n = len(temperatures)
        answer = [0] * n
        stack = []  
        #Loop through the given array enumerated, while the stack and current temprature are
        #greater then the stacks initial value, remove the previous index, add the current index
        #to the stack.
        for i, temp in enumerate(temperatures):
            while stack and temp > temperatures[stack[-1]]:
                prevIndex = stack.pop()
                answer[prevIndex] = i - prev_index
            stack.append(i)
        return answer
