Given an binary array nums and an integer k, return true if all 1's are at least k places away from each other, otherwise return false.

 

Example 1:
Input: nums = [1,0,0,0,1,0,0,1], k = 2
Output: true
Explanation: Each of the 1s are at least 2 places away from each other.

Example 2:
Input: nums = [1,0,0,1,0,1], k = 2
Output: false
Explanation: The second 1 and third 1 are only one apart from each other.

class Solution(object):
    def kLengthApart(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: bool
        """
        distance = k
        #We iterate through the array. If we find a 1, we check to see if it is the
        #appropriate distance away, and if not, we return False. We keep checking and
        #incrementing the distance as needed, until we check the entire array, or find
        #a invalid distance.
        for num in nums:
            if num == 1:
                if distance < k:
                    return False
                distance = 0
            else:
                distance += 1
        return True
