Given a string s, return true if s is a good string, or false otherwise.

A string s is good if all the characters that appear in s have the same number of occurrences (i.e., the same frequency).

 

Example 1:
Input: s = "abacbc"
Output: true
Explanation: The characters that appear in s are 'a', 'b', and 'c'. All characters occur 2 times in s.

Example 2:
Input: s = "aaabb"
Output: false
Explanation: The characters that appear in s are 'a' and 'b'.
'a' occurs 3 times while 'b' occurs 2 times, which is not the same number of times.

class Solution(object):
    def areOccurrencesEqual(self, s):
        """
        :type s: str
        :rtype: bool
        """
        #Make an array to store the counts of each character in the string.
        myArray = []
        #Turn the string into a set.
        mySet = set(s)
        #Iterate through the set of the string.
        for i in mySet:
            #Append the count of each character to the array.
            myArray.append(s.count(i))
        #Return whether or not the array contains more then one unique character.
        return len(set(myArray)) == 1
