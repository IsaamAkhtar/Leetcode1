Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.

 

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true

Example 2:
Input: nums = [1,0,1,1], k = 1
Output: true

Example 3:
Input: nums = [1,2,3,1,2,3], k = 2
Output: false

class Solution(object):
    def containsNearbyDuplicate(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: bool
        """
        #Make a set to stored the values that have had the conditions checked already.
        seenSet = set()
        #Loop through the length of the array.
        for i in range(len(nums)):
            #If we have a value already in the set, return true.
            if nums[i] in seenSet:
                return True
            seenSet.add(nums[i])
            #Checking the other condition.
            if i >= k:
                seenSet.remove(nums[i - k])
        return False
