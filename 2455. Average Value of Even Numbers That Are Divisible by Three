Given an integer array nums of positive integers, return the average value of all even integers that are divisible by 3.

Note that the average of n elements is the sum of the n elements divided by n and rounded down to the nearest integer.

 

Example 1:
Input: nums = [1,3,6,10,12,15]
Output: 9
Explanation: 6 and 12 are even numbers that are divisible by 3. (6 + 12) / 2 = 9.

Example 2:
Input: nums = [1,2,4,7,10]
Output: 0
Explanation: There is no single number that satisfies the requirement, so return 0.

class Solution(object):
    def averageValue(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        #Initialise a list to store the numbers in nums that are divisible by three.
        divisibleByThree = []
        #Loop through nums.
        for num in nums:
            #Check if each number is divisble by three, and is even.
            if num % 3 == 0 and num % 2 == 0:
                #Append each number divisible by three.
                divisibleByThree.append(num)
        #If there are are any number/s divisible by three, return the average of them,
        #otherwise, return 0.
        if len(divisibleByThree) >= 1:
            return sum(divisibleByThree) / len(divisibleByThree)
        return 0
